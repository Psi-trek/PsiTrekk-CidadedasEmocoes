// DentroDeMim_Prot√≥tipo_Fase1_Vergonha.jsx // Prot√≥tipo React (single-file) para rodar em navegador/tablet. // Instru√ß√µes r√°pidas: // - Cole este arquivo em um projeto React (Vite/CRA) e importe/roteie como componente principal. // - Usa Tailwind CSS para estilos; se n√£o tiver Tailwind, adapte as classes ou remova. // - Reproduz sons usando WebAudio (n√£o depende de arquivos externos).

import React, { useEffect, useState, useRef } from "react"; import { motion } from "framer-motion";

export default function DentroDeMimPrototipo() { // Estado do prot√≥tipo const [step, setStep] = useState(0); // 0=intro,1=cenario,2=escolha,3=corpo,4=reflexao,5=conclusao const [selectedEmotion, setSelectedEmotion] = useState(null); const [explanation, setExplanation] = useState(""); const [scoreNote, setScoreNote] = useState(null); const audioCtxRef = useRef(null);

useEffect(() => { // inicializa AudioContext quando usu√°rio interagir pela primeira vez // (muitos navegadores bloqueiam autoplay) audioCtxRef.current = null; }, []);

function playClick() { try { if (!audioCtxRef.current) audioCtxRef.current = new (window.AudioContext || window.webkitAudioContext)(); const ctx = audioCtxRef.current; const o = ctx.createOscillator(); const g = ctx.createGain(); o.type = "sine"; o.frequency.value = 600; g.gain.value = 0.02; o.connect(g); g.connect(ctx.destination); o.start(); setTimeout(() => { o.stop(); }, 80); } catch (e) { // falha silenciosa } }

function playSoftChime() { try { if (!audioCtxRef.current) audioCtxRef.current = new (window.AudioContext || window.webkitAudioContext)(); const ctx = audioCtxRef.current; const o = ctx.createOscillator(); const g = ctx.createGain(); o.type = "triangle"; o.frequency.value = 880; g.gain.value = 0.02; o.connect(g); g.connect(ctx.destination); o.start(); const t = setTimeout(() => { o.frequency.value = 660; }, 160); setTimeout(() => { o.stop(); clearTimeout(t); }, 380); } catch (e) {} }

const scenarioText = Voc√™ chega ao intervalo na escola e v√™ seu grupo de amigos rindo e cochichando. Um dos seus colegas olha na sua dire√ß√£o, sorri e continua conversando. Voc√™ sente que est√£o rindo de voc√™.;

const emotions = [ { id: "vergonha", label: "Vergonha", emoji: "üò≥", hint: "Quero desaparecer, sinto calor e rosto queimando." }, { id: "raiva", label: "Raiva", emoji: "üò°", hint: "Quero responder, me sinto injusti√ßado." }, { id: "tristeza", label: "Tristeza", emoji: "üòû", hint: "Sinto vontade de me recolher e chorar." }, { id: "ansiedade", label: "Ansiedade", emoji: "üò∞", hint: "Meu cora√ß√£o acelera, fico inquieto." }, { id: "indiferenca", label: "Indiferen√ßa", emoji: "üòê", hint: "Acho que n√£o ligo, finjo normalidade." } ];

const bodyReactions = { vergonha: ["Rubor no rosto", "Olhar para baixo", "Falar baixo/engasgar"], raiva: ["Mand√≠bulas tensas", "Respira√ß√£o curta", "Ficar vermelho"], tristeza: ["Olhos lacrimejantes", "Sono, falta de energia", "Ficar mais quieto"], ansiedade: ["M√£os tr√™mulas", "Borboletas no est√¥mago", "Ficar inquieto"], indiferenca: ["Express√£o neutra", "Mant√©m dist√¢ncia", "Pouca rea√ß√£o corporal"] };

function handleStart() { playClick(); setStep(1); }

function handleChoose(em) { playClick(); setSelectedEmotion(em); setStep(2); }

function handleBodyChoice(reaction) { playClick(); setScoreNote("√ìtimo ‚Äî voc√™ associou uma rea√ß√£o corporal coerente."); setTimeout(() => { playSoftChime(); setStep(3); }, 600); }

function handleExplain() { playClick(); // simples valida√ß√£o: se digitou algo, avan√ßa if (explanation.trim().length > 0) { setStep(4); // sugest√£o autom√°tica para a psic√≥loga setScoreNote( Sugest√£o para terapeuta: explore as sensa√ß√µes f√≠sicas e as evid√™ncias que levaram o adolescente a escolher '${selectedEmotion.label}'. ); } else { setScoreNote("Tente escrever ao menos uma frase ‚Äî isso ajuda a reflex√£o."); } }

function handleFinish() { playSoftChime(); setStep(5); }

return ( <div className="min-h-screen flex items-center justify-center bg-gradient-to-br from-indigo-50 to-pink-50 p-6"> <div className="max-w-3xl w-full bg-white/90 backdrop-blur-md rounded-2xl shadow-2xl p-6 md:p-10"> <header className="flex items-center justify-between mb-4"> <h1 className="text-2xl md:text-3xl font-extrabold tracking-tight">Dentro de Mim ‚Äî Fase 1: Vergonha</h1> <div className="text-sm opacity-80">Tablet ‚Äî Sess√£o guiada</div> </header>

{/* Conte√∫do por passo */}
    {step === 0 && (
      <motion.div initial={{ opacity: 0, y: 10 }} animate={{ opacity: 1, y: 0 }}>
        <p className="mb-6 text-gray-700">Neste prot√≥tipo, o objetivo √© ajudar o adolescente a <strong>identificar</strong> e <strong>nomear</strong> a emo√ß√£o que aparece em uma situa√ß√£o social.</p>
        <div className="flex flex-col md:flex-row gap-4">
          <button onClick={handleStart} className="px-6 py-3 bg-gradient-to-r from-pink-500 to-indigo-500 text-white rounded-xl font-semibold shadow-lg hover:scale-[1.01] active:scale-95">
            Come√ßar a Fase
          </button>
          <button onClick={() => { playSoftChime(); setScoreNote('Dica: pe√ßa ao adolescente para entrar no personagem e responder como se fosse ele.'); }} className="px-6 py-3 border border-indigo-100 rounded-xl">
            Dica para o terapeuta
          </button>
        </div>
        {scoreNote && <div className="mt-4 text-sm text-gray-600">{scoreNote}</div>}
      </motion.div>
    )}

    {step === 1 && (
      <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }}>
        <h2 className="text-lg font-bold mb-3">Cen√°rio</h2>
        <div className="p-4 bg-indigo-50 rounded-lg mb-4">
          <p className="text-gray-800">{scenarioText}</p>
        </div>
        <p className="mb-3 text-gray-700">O que voc√™ acha que o personagem est√° sentindo agora?</p>
        <div className="grid grid-cols-2 gap-3">
          {emotions.map((em) => (
            <motion.button key={em.id} whileTap={{ scale: 0.97 }} onClick={() => handleChoose(em)} className="flex items-center gap-3 p-3 bg-white rounded-xl border hover:shadow-md">
              <div className="text-2xl">{em.emoji}</div>
              <div className="text-left">
                <div className="font-semibold">{em.label}</div>
                <div className="text-sm text-gray-500">{em.hint}</div>
              </div>
            </motion.button>
          ))}
        </div>
      </motion.div>
    )}

    {step === 2 && selectedEmotion && (
      <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }}>
        <h2 className="text-lg font-bold mb-3">Rea√ß√µes no corpo</h2>
        <p className="text-gray-700 mb-3">Escolha qual dessas rea√ß√µes combina com a emo√ß√£o <strong>{selectedEmotion.label}</strong>:</p>
        <div className="grid grid-cols-1 md:grid-cols-3 gap-3 mb-4">
          {bodyReactions[selectedEmotion.id].map((r) => (
            <motion.button key={r} whileTap={{ scale: 0.98 }} onClick={() => handleBodyChoice(r)} className="p-3 bg-white rounded-lg border text-left">
              {r}
            </motion.button>
          ))}
        </div>

        <div className="mt-4">
          <button onClick={() => { setStep(1); setSelectedEmotion(null); playClick(); }} className="px-4 py-2 rounded-lg border">Voltar</button>
        </div>

        {scoreNote && <div className="mt-4 text-sm text-gray-600">{scoreNote}</div>}
      </motion.div>
    )}

    {step === 3 && (
      <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }}>
        <h2 className="text-lg font-bold mb-3">Reflex√£o</h2>
        <p className="text-gray-700 mb-3">Agora, descreva em uma ou duas frases por que voc√™ acha que o personagem sente <strong>{selectedEmotion.label}</strong>. Seja honesto ‚Äî voc√™ est√° no personagem.</p>
        <textarea value={explanation} onChange={(e) => setExplanation(e.target.value)} rows={4} className="w-full p-3 rounded-lg border mb-3" placeholder="Escreva aqui..." />
        <div className="flex gap-2">
          <button onClick={handleExplain} className="px-5 py-2 bg-gradient-to-r from-green-400 to-blue-500 text-white rounded-lg">Enviar reflex√£o</button>
          <button onClick={() => { setStep(2); setExplanation(""); playClick(); }} className="px-5 py-2 border rounded-lg">Escolher outra emo√ß√£o</button>
        </div>
        {scoreNote && <div className="mt-3 text-sm text-gray-600">{scoreNote}</div>}
      </motion.div>
    )}

    {step === 4 && (
      <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }}>
        <h2 className="text-lg font-bold mb-3">Feedback do jogo</h2>
        <div className="p-3 bg-yellow-50 rounded-lg mb-3">
          <p className="text-gray-800">Voc√™ disse: <em>"{explanation}"</em></p>
          <p className="mt-2 text-gray-700">Poss√≠vel leitura: <strong>{selectedEmotion.label}</strong> ‚Äî observe sinais no corpo e nos pensamentos. A psic√≥loga pode perguntar: "O que na situa√ß√£o fez voc√™ pensar nisso?"</p>
        </div>

        <div className="flex gap-3">
          <button onClick={handleFinish} className="px-5 py-2 bg-gradient-to-r from-pink-500 to-indigo-500 text-white rounded-lg">Concluir fase</button>
          <button onClick={() => { setStep(3); playClick(); }} className="px-5 py-2 border rounded-lg">Editar resposta</button>
        </div>

        {scoreNote && <div className="mt-3 text-sm text-gray-600">{scoreNote}</div>}
      </motion.div>
    )}

    {step === 5 && (
      <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }}>
        <h2 className="text-lg font-bold mb-3">Fim da fase ‚Äî Vergonha</h2>
        <p className="text-gray-700 mb-4">Parab√©ns ‚Äî voc√™ completou a fase. A psic√≥loga pode explorar: situa√ß√µes reais do adolescente, estrat√©gias de regula√ß√£o e alternativas de comportamento.</p>
        <div className="grid grid-cols-1 md:grid-cols-2 gap-3">
          <div className="p-3 bg-white rounded-lg border">
            <h3 className="font-semibold">Sugest√µes para a psic√≥loga</h3>
            <ul className="list-disc pl-5 mt-2 text-sm text-gray-600">
              <li>Explorar evid√™ncias: o que me fez pensar que riam de mim?</li>
              <li>Relacionar sensa√ß√µes f√≠sicas com emo√ß√£o.</li>
              <li>Praticar t√©cnicas breves de regula√ß√£o (respira√ß√£o, ancoragem).</li>
            </ul>
          </div>
          <div className="p-3 bg-white rounded-lg border">
            <h3 className="font-semibold">Registro r√°pido</h3>
            <p className="text-sm text-gray-600">Emo√ß√£o escolhida: <strong>{selectedEmotion?.label}</strong></p>
            <p className="text-sm text-gray-600">Reflex√£o do jogador: <em>{explanation}</em></p>
          </div>
        </div>

        <div className="mt-4 flex gap-3">
          <button onClick={() => { setStep(0); setSelectedEmotion(null); setExplanation(""); playClick(); }} className="px-4 py-2 border rounded-lg">Reiniciar prot√≥tipo</button>
          <button onClick={() => { /* aqui poderia avan√ßar para pr√≥xima emo√ß√£o em vers√£o completa */ playSoftChime(); }} className="px-4 py-2 bg-indigo-600 text-white rounded-lg">Voltar ao menu</button>
        </div>
      </motion.div>
    )}

    <footer className="mt-6 text-xs text-gray-400">Prot√≥tipo ‚Äî entregue para uso em sess√£o cl√≠nica. Personalize cen√°rios e emo√ß√µes conforme necessidade.</footer>
  </div>
</div>

); }